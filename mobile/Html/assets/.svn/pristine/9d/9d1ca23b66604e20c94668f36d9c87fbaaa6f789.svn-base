/*
 * 通用JS
 */

//获取URL参数
function queryString(item) {
	var sValue = location.search.match(new RegExp("[\?\&]" + item + "=([^\&]*)(\&?)", "i"))
	return sValue ? sValue[1] : sValue
}

var urlJson={base:'/weixin'}

//远程 信息提示
function remoteMessage(result) {
	switch (result) {
		case 0:
			//return("成功" );
			return("成功" );
			break;
		case 1:
			return("参数错误");
			break;
		case 2:
			return("错误的签名");
			break;
		case 3:
			return("操作速度过快");
			break;
		case 4:
			return("IP受限");
			break;
		case 5:
			return("手机验证码错误");
			break;
		case 6:
			return("用户异常");
			break;
		case 7:
			return("手机号不存在");
			break;
		case 8:
			return("请退出重新登录");
			break;
		case 9:
			return("暂无权限,请联系客服");
			break;
		case 11:
			return("用户名或密码错误");
			break;
		case 12:
			return("手机号或密码错误");
			break;
		case 13:
			return("重复的用户名");
			break;
		case 14:
			return("手机号已存在");
			break;
		case 15:
			return("用户名或手机号不存在");
			break;
		case 16:
			return("没有资金监管账号");
			break;
		case 17:
			return("没有银行卡号");
			break;
		case 18:
			return("重复的银行卡号");
			break;
		case 19:
			return("交易密码错误，连续输入错误账号将被锁定");
			break;
		case 20:
			return("未设置交易密码");
			break;
		case 21:
			return("已进行实名认证");
			break;
		case 22:
			return("未实名认证");
			break;
		case 23:
			return("余额不足");
			break;
		case 24:
			return("金额填写有误");
			break;
		case 25:
			return("银行卡错误");
			break;
		case 26:
			return("小于最低提现金额1");
			break;
		case 27:
			return("大于可赎回金");
			break;
		case 28:
			return("实名认证失败");
			break;
		case 120:
			return("注册超时");
			break;
		case 121:
			return("登录超时");
			break;
		case 122:
			return("默认的短信超时");
			break;
		case 123:
			return("随机数超时");
			break;
		case 249:
			return("通用型错误");
			break;
		case 250:
			return("服务器错误");//对用户而言这是不应该出现的，比如数据库连不上;
			break;
		default:
		    return("系统错误，请重试"); 
	}
}

	//访问验证。。8就是token失效直接跳转到登陆页
	function tip(code){
		if(code==8 || code==1){
			window.location.href=urlJson.base + "/login.html";
		}else{
			Sys.showToast(remoteMessage(code));
		}
	}

	/*获取请求参数必须的参数*/
	function getRequestData(){
		return {mobile:localStorage.mobile,signature:localStorage.signature,_:Math.random()};
	}
	
	function getMobile(){
		return  localStorage.mobile;
	}
	
	function getpwd(){
		return  localStorage.pwd;
	}
	
	function getSignature(){
		return  localStorage.signature;
	}
	
	//判断是否登录状态
	function refresh(){
		if(localStorage.signature==null){
			return false;
		}else{
			return true;
		}
	   
	};
	
	//判断返回的错误码
	function checkCode(code){
		if(code==0){
			return true;
		}else if(code==12){
			
		}
	}
	
	function logout(){
		//登出
		localStorage.clear();
	}

	//ajax请求异常提示
	function requestError(){
		Sys.showToast("服务器繁忙,请稍后重试");
	}
	
	/*----------------------------------------------+
	| Author: B3rnardoAS 							|
	| desc:底部弹窗提醒								|
	| Web: http://jugandoparajugar.blogspot.com.es/ |
	+----------------------------------------------*/
	var Sys = {
		nVisibles: 0,
		waiting: [],
		width: 0,
		
		showToast: function (msg, mills) {
			if (!msg) return false;
			if (this.nVisibles == 0) {
				if (!mills) mills = this.__calcMills(msg);
				var idToast = this.nVisibles++;
				$('body').prepend("<div class='toast' id='toast"+ idToast +"'><div>"+ msg +"<div></div>");
			/*	this.width = ($(window).width() < $(window).height() ? $(window).width() : $(window).height()) - 50;
				$('.toast>div').css('width', this.width +"px");*/
				$('#toast'+ idToast).hide();
				$('#toast'+ idToast).fadeIn('fast');
				var t = this;
				setTimeout(function() {
					$('#toast'+ idToast).fadeOut('slow', function () {
						$('#toast'+ idToast).remove();
						t.__nextToast();
					});
					t.nVisibles = 0;
				}, mills);
			}
			else {this.waiting.push({msg: msg, mills: mills});}
			return true;
		},
		__nextToast: function () {
			if (this.waiting.length>0) {
				var nextToast = this.waiting.shift();
				this.showToast(nextToast.msg, nextToast.mills);
			}
		},
		__calcMills: function (string) {
			var words = string.split(" "); // Numero palabras de un string.
			var mills = 0;
			for (var i=0; i<words.length; i++) {
				if (words[i].length < 7) mills += 400;
				else mills += 600;
			}
			mills += 500;
			if (mills < 1500) mills = 1500;
			return mills;
		}
	};
	
	/*----------------------------------------------+
	| desc:底部弹窗验证提醒								|
	+----------------------------------------------*/
	var Validate={
		_isnull:function(value){
			if (value==null||value===""||value==undefined){
				return true;
			}else{
				return false;
			}
		},
		_mobile:function(id){
			var value=$('#'+id).val();
			if(this._isnull(value)){
				Sys.showToast("请填写手机号");
				return false;
			}else{
				var regu =/^1[3|4|5|7|8|][0-9]{9}$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
				       return true;
				}else{
			    	Sys.showToast("请输入正确的11位手机号码");
			        return false;
			    }
			}
		},
		_pwd:function(id){
			var value=$('#'+id).val();
			if(this._isnull(value)){
		    	Sys.showToast("请输入密码");
		        return false;
			}else{
				return true;
			}
		},
		_money:function(id){
			var value=$('#'+id).val();
			if(this._isnull(value)){
				Sys.showToast("请填写金额");
				return false;
			}else{
				var regu =/^[0-9]+(.[0-9]{1,2})?$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
				       return true;
				}else{
			    	Sys.showToast("请输入正确的金额(精确到分)");
			        return false;
			    }
			}
		},
		_withdraw:function(id,blanceId){
			var balance=new Number($('#'+blanceId).val());
			var value=new Number($('#'+id).val());
			if(this._isnull(value)){
				Sys.showToast("请填写金额");
				return false;
			}else{
				var regu =/^[0-9]+(.[0-9]{1,2})?$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
				    if (value>balance) {
		            	Sys.showToast("余额不足");
		                return false;
			        }else{
			        	return true;
			        }
				}else{
			    	Sys.showToast("请输入正确的金额(精确到分)");
			        return false;
			    }
			}
		},
		_apply:function(id,blanceId){
			var balance=new Number($('#'+blanceId).val());
			var value=new Number($('#'+id).val());
			if(this._isnull(value)){
				Sys.showToast("请填写金额");
				return false;
			}else{
				var regu =/^[1-9]\d{2,}[\.]?\d{0,2}$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
				    if (value>balance) {
		            	Sys.showToast("余额不足");
		                return false;
			        }else{
			        	return true;
			        }
				}else{
			    	Sys.showToast("请填写不小于100的数字,精确到两位小数");
			        return false;
			    }
			}
		},
		_applyYdb:function(id,blanceId,canApplyId,min_num){
			var value=new Number($('#'+id).val());
			var balance=new Number($('#'+blanceId).val());
			var canApply=rmoney($('#'+canApplyId).text());
			if(this._isnull(value)){
				Sys.showToast("金额不能为空");
				return false;
			}else{
				var regu =/^[1-9]\d{2,}$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
				    if (value>balance) {
				    	Sys.showToast("余额不足");
			            return false;
			        }else if (!isNaN(value) && value%min_num!=0){
				        Sys.showToast('请以'+min_num+'的整数倍投标');
			            return false;
			        }else if(value>canApply){
			            Sys.showToast('投资金额大于剩余可投资');
			            return false;
			        }else{
			        	return true;
			        }
				}else{
			    	Sys.showToast('请以'+min_num+'的整数倍投标');
			        return false;
			    }
			}
		},
		_redeem:function(id,maxRedeemAmount){
			var value=new Number($('#'+id).val());
			var redeem=new Number($('#'+maxRedeemAmount).val());
			if(this._isnull(value)){
				Sys.showToast("金额不能为空");
				return false;
			}else{
				var regu =/^[0-9]+(.[0-9]{1,2})?$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
				    if(value==0){
				    	Sys.showToast('赎回金额需大于0');
			 			return false;
				 	}else if (value>redeem) {
				 		Sys.showToast('大于可提取金额');
			 			return false;
			        }else{
			        	return true;
			        }
				}else{
			    	Sys.showToast("请填写正确金额,精确到两位小数");
			        return false;
			    }
			}
		},
		_setpwd:function(id){
			var value=$('#'+id).val();
			if(this._isnull(value)){
				Sys.showToast("请输入新密码");
				return false;
			}else{
				var regu =/^(?![^a-zA-Z]+$)(?!\D+$).{6,20}$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
					return true;
				}else{
					Sys.showToast("密码长度为6-20位密码必须为字母加数字");
					return false;
				}
			}
		},
		_code:function(id){
			var value=$('#'+id).val();
			if(this._isnull(value)){
				Sys.showToast("请输入验证码");
				return false;
			}else{
				var regu =/^\d{4}$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
					return true;
				}else{
					Sys.showToast("请输入4位数的验证码");
					return false;
				}
			}
		},
		_idCard:function(id){
			var value=$('#'+id).val();
			if(this._isnull(value)){
				Sys.showToast("请填写身份证号码");
				return false;
			}else{
				if(IdCardValidate(value)){
					return true;
				}else{
					Sys.showToast("请正确输入您的二代身份证号码");
					return false;
				}
			}
		},
		_realname:function(id){
			var value=$('#'+id).val();
			if(this._isnull(value)){
				Sys.showToast("请填写真实姓名");
				return false;
			}else{
				var regu =/^[\u4e00-\u9fa5]+$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
					return true;
				}else{
					Sys.showToast("包含非法字符");
					return false;
				}
			}
		},
		_bankCard:function(id){
			var value=$('#'+id).val();
			if(this._isnull(value)){
				Sys.showToast("请填写银行卡号");
				return false;
			}else{
				var regu =/^\d{16}|\d{19}$/;
				var re = new RegExp(regu);
				if (re.test(value)) {
					if(cardNoCheck(value)){
						return true;
					}else{
						Sys.showToast("请填写正确的卡号");
						return false;
					}
				}else{
					Sys.showToast("请填写正确的卡号");
					return false;
				}
			}
		}
	};

	
function cardNoCheck(bankno) {
	// alert(bankno);
	if (bankno == "" || bankno == null) {
		// $(".Error").html("*卡号输入不正确，请检查").show();
		return false;
	}
	var lastNum = bankno.substr(bankno.length - 1, 1);

	var first15Num = bankno.substr(0, bankno.length - 1);
	var newArr = new Array();
	for (var i = first15Num.length - 1; i > -1; i--) {
		newArr.push(first15Num.substr(i, 1));
	}
	var arrJiShu = new Array();
	var arrJiShu2 = new Array();

	var arrOuShu = new Array();
	for (var j = 0; j < newArr.length; j++) {
		if ((j + 1) % 2 == 1) {
			if (parseInt(newArr[j]) * 2 < 9)
				arrJiShu.push(parseInt(newArr[j]) * 2);
			else
				arrJiShu2.push(parseInt(newArr[j]) * 2);
		} else
			arrOuShu.push(newArr[j]);
	}

	var jishu_child1 = new Array();
	var jishu_child2 = new Array();
	for (var h = 0; h < arrJiShu2.length; h++) {
		jishu_child1.push(parseInt(arrJiShu2[h]) % 10);
		jishu_child2.push(parseInt(arrJiShu2[h]) / 10);
	}

	var sumJiShu = 0;
	var sumOuShu = 0;
	var sumJiShuChild1 = 0;
	var sumJiShuChild2 = 0;
	var sumTotal = 0;
	for (var m = 0; m < arrJiShu.length; m++) {
		sumJiShu = sumJiShu + parseInt(arrJiShu[m]);
	}

	for (var n = 0; n < arrOuShu.length; n++) {
		sumOuShu = sumOuShu + parseInt(arrOuShu[n]);
	}

	for (var p = 0; p < jishu_child1.length; p++) {
		sumJiShuChild1 = sumJiShuChild1 + parseInt(jishu_child1[p]);
		sumJiShuChild2 = sumJiShuChild2 + parseInt(jishu_child2[p]);
	}
	sumTotal = parseInt(sumJiShu) + parseInt(sumOuShu) + parseInt(sumJiShuChild1) + parseInt(sumJiShuChild2);

	var k = parseInt(sumTotal) % 10 == 0 ? 10 : parseInt(sumTotal) % 10;
	var luhm = 10 - k;
	if (parseInt(sumJiShu) + parseInt(sumOuShu) == 0) {
		// $(".Error").html("*卡号输入不正确，请检查").show();
		return false;
	}

	if (lastNum == luhm) {
		//$(".Error").hide();
		return true;
	} else {
		// $(".Error").html("*卡号输入不正确，请检查").show();
		return false;
	}
}